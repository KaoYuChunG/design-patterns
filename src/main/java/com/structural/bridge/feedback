基本介绍
1) 桥接模式(Bridge模式)是指：将实现与抽象放在两个不同的类层次中，使两个层 次可以独立改变。
2) 是一种结构型设计模式
3) Bridge模式基于类的最小设计原则，通过使用封装、聚合及继承等行为让不同 的类承担不同的职责。它的主要特点是把抽象(Abstraction)与行为实现 (Implementation)分离开来，从而可以保持各部分的独立性以及应对他们的功能 扩展

注意事项
1) 实现了抽象和实现部分的分离，从而极大的提供了系统的灵活性，让抽象部分和实 现部分独立开来，这有助于系统进行分层设计，从而产生更好的结构化系统。
2) 对于系统的高层部分，只需要知道抽象部分和实现部分的接口就可以了，其它的部 分由具体业务来完成。
3) 桥接模式替代多层继承方案，可以减少子类的个数，降低系统的管理和维护成本。
4) 桥接模式的引入增加了系统的理解和设计难度，由于聚合关联关系建立在抽象层， 要求开发者针对抽象进行设计和编程
5) 桥接模式要求正确识别出系统中两个独立变化的维度，因此其使用范围有一定的局 限性，即需要有这样的应用场景。

场景
1) 对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，桥 接模式尤为适用.
2) 常见的应用场景: -JDBC驱动程序 -银行转账系统 转账分类: 网上转账，柜台转账，AMT转账 转账用户类型：普通用户，银卡用户，金卡用户.. -消息管理 消息类型：即时消息，延时消息 消息分类：手机短信，邮件消息，QQ消息...

。分離抽象和實現部分，讓系統更靈活
。進行分層設計來產生更好的結構化系統
。只需要知道分層的抽象部分和實踐的接口就可以
。分層代替繼承樣式以減少子類個數，就低維護成本和系統管理
。此模式加了的理解和設難度，因為聚合關係建立在抽象層，開發者要能判斷出
。要辦別出兩個獨立變化的抽象類

使用時機
減少類的個數，如銀行轉帳系統